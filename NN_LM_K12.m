function [Y,Xf,Af] = NN_LM_K12(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 21-Apr-2021 14:42:35.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx6 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [6.7155162862109e-07;0.227765751497821;0;0.260905029807448;0;0.401016135895025];
x1_step1.gain = [2.00000134860859;3.78564680696321;2;4.86867054572389;2;7.6089687160829];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.4945870152946842957;0.37023472285006098215;-27.319583243154994534;26.456036354590978021;-0.50943113203795742372;1.1876838891158691958;-0.98105716645326457304;33.401805210122752499;-0.69111018024979409269;22.000465664551118294;-0.82803336031968854947;-3.1881449877331933251;5.3464260663038434274;6.4715994222475048403;-0.2135421398187255515;26.059908288970795809;-5.6152833394693439928;37.337574829688925604;0.28037381004043676613;6.4842033252418733724];
IW1_1 = [29.409931010110746286 -0.0081130319580138745422 -7.7013528830724107266 2.9899466830848560051 -0.0096973559376832153128 0.0015052187423216162928;4.0187138812019496115 -0.22043005663676920602 -5.3656600967835146321 0.049737790345115606705 -0.021565172366525272446 0.18128649283256584313;64.740040810923972003 1.4628648671706518947 130.01818159514741069 20.38597252761029921 -1.6963106948892396897 0.032397763281315182515;-78.38198885825455875 -1.0374249714618799523 -102.98529648159066596 -19.714845508122529338 1.1411656652066857198 -0.022699987286258261482;3.7298855358636453516 0.074074843774208948277 -2.0599653858144248986 0.29554586502537838477 -0.055529592648101512575 -0.14923518461487755848;-10.964138429733802482 0.022293760008725103244 4.4743278441909737353 -0.97426979857503048787 0.022093522394321586655 -0.012763783749100842888;10.674654641487869355 -0.0084325531724147705787 -4.4225793024675947862 0.94112081333097008518 -0.01820006101490576067 -0.0084985632765730741156;-83.204165624862042705 0.83722699776534970084 -151.58503101078287045 -26.82567575685486716 0.16278262806737167634 0.092286729155994118301;-17.902358937973470887 -0.22421811741808170271 24.487184803207437511 0.39244450602099073544 0.26276182795621111365 0.03145696110577677479;-61.22069051979386245 -1.3817541332725504777 -92.732364964083771497 -16.184730179622192736 1.6310865838897985469 -0.038937289849738605796;-18.324944296828711288 -0.17163141002681828184 24.928881244702278508 0.32869247177006599703 0.28786294324703365355 0.042393109713884810641;27.672736217868962427 -0.0558149019500526547 -6.3047965043456652978 2.9584159989761666942 -0.10325463194807507628 -0.0034200125321492184059;19.813798330271247039 0.048633864304955323754 -60.964826878235164997 -3.7277864311866482083 -0.47563765964355747551 0.014081406542942077886;-12.63707551971801557 0.10744558236840914822 -32.956300469908804018 -5.1022552389933943928 0.33588070088370042265 -0.0007323279072887262011;-4.0797074029610245205 0.25477101267093660297 5.3905278193078443039 -0.11041964070815238341 0.022585325734830172251 -0.18301880235358575222;-17.995313723471831224 0.10459046222987639085 -166.2067100128959396 -19.375751571189400835 -0.51536241451852782269 0.064008582730388619009;-18.757311697866050793 -0.067225240543360223477 59.281963351480492008 3.7251591820020197865 0.28044647894931162835 -0.0078223389169421765621;-156.43870628635704634 0.92420866748671981483 -103.22921966390613591 -31.330667619360266229 1.1613427237591518182 0.072465147220453940413;-3.5939508339259353953 -0.081212096553053447767 2.0217573477057655396 -0.23639100242723884437 0.055605570837690174169 0.14871874030313536608;-2.9272488321667728961 0.16455995405236620299 -48.197867724520563115 -5.4326147779979638841 -0.24022516457814649393 0.01195038752291864223];

% Layer 2
b2 = 0.60287361652793691746;
LW2_1 = [6.6485965140951694963 10.918785725199812831 27.425090496747841939 -33.655744392425610556 7.5652098759737631539 -7.2312108669300592112 -7.3784203450172691774 -72.057413856199630686 11.857086789261957804 41.4031986904410374 -11.835061860522714028 -7.3481185134503776979 -31.429629798896890236 -15.937256082978974447 10.659610072421761728 48.101241548496780354 -27.223134663626893825 47.849101011934919825 7.2237804625013959381 15.231541356095743112];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 24.5186322287804;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
