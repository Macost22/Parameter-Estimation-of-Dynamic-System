function [Y,Xf,Af] =NN_LM_m(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 23-Apr-2021 00:20:16.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx6 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [6.7155162862109e-07;0.227765751497821;0;0.260905029807448;0;0.401016135895025];
x1_step1.gain = [2.00000134860859;3.78564680696321;2;4.86867054572389;2;7.6089687160829];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.1984794334277264483;-0.017399215348852508506;35.007983971066600759;-0.51903943096325411144;2.721393763294329915;40.93526457276235675;-0.21391159923297173306;37.278516545916012603;2.8310095962042698403;-0.36188238160876634586;-3.1110057157197750222;5.6879320389625140919;37.515455930434114862;-0.59115581737697997511;-2.9972994305047442332;-32.439369386183436461;-0.47984803548656251859;-1.5812448897882629417;0.7030527779676819522;1.1093170304159392092;-0.69969935842399955117;-6.0149554989304903074;-9.353718841800986894;-9.729439764756996567;0.40958670311755585036];
IW1_1 = [4.5733733336362210053 0.14918493085746933891 -5.5258825888725011666 -0.65822079701036340094 -0.096186023605229029054 -0.24337620628541220547;0.4244967862767429212 -0.77489315557631188724 -0.5111051259116504708 0.66636983583356834693 -0.0021920327071041647259 0.015570158929082906704;-46.928317499277483194 -1.7033798591664126576 -197.76752500370045595 -25.315264356141895519 0.052663899912408801418 0.030654957233815872952;4.5321650059183573589 -0.18513123050390534186 -5.4663601219661224206 -0.10386279170707418684 -0.018773056068379517097 -0.19348748415184927052;-36.383226124674436619 -0.027318068398948840148 16.78100764298930514 -2.8263249758701576297 0.34242039959988690434 -0.0076685181528745082272;-109.66419026188277996 0.13558164614420536997 -174.15064930392850329 -32.266436968194668111 -0.23559252554072904196 0.23344958609754506984;3.5657476326899919528 -0.035949669219101462736 -4.3594046430994550789 0.12656712373704462338 -0.0032157366342130547579 -0.095534991458001886078;-135.20133143189366365 -1.356204305090322082 -121.76193002702373747 -28.570102723069311423 0.29740683429804865012 0.2250082219348061574;-36.657721931522004866 -0.079911152245054031806 16.57628760086281261 -3.1832054533715665734 0.32940715275618509539 -0.03205019700039835745;-29.908363004009089536 0.090976395544138194404 37.013544712427290051 0.21287620828223571823 -0.10783789365302280661 0.036002390565708697334;44.623108476440272341 0.01595593874288641148 -18.994555808042338896 3.6866610502551346862 -0.24134284123804339295 -0.0094309142455630424334;49.097966419266008131 -0.19319071593486825122 -92.658623598114715492 -3.019890109588412308 -0.56449502752758351498 -0.020229730581218009072;-152.83851111450428562 -2.2109219903181038802 -103.02145823301539451 -28.762587701515176519 0.91708631048392619256 -0.0022900533275843184058;7.9687658887373400418 0.46590063162348033243 -4.4761321923908825582 0.23482017424027618047 -0.16801609574792267243 0.050614387490696216565;40.435306873656301718 0.053080262758512269938 -17.623857096628519514 3.5943420361892890469 -0.2887376895712772118 0.037513974452118195591;23.322114724697907917 1.5946711436169225262 206.23540143402971125 22.632907579656375674 0.47358204215083743449 -0.21185068480733945662;-28.58933241981066331 0.050464684053654167151 35.340512181259725821 0.26356558167363208778 -0.077899799673819422607 0.036719771656563780782;3.6390687360096563019 -7.7643321413808852327 14.393473148402934569 9.6976893290201306996 0.075371582462214120612 1.6180991221548413073;32.201678688406317974 -0.047566734828037623983 -39.231496326872090208 0.32591462094462858579 -0.050865060262962266679 -0.030607505508455784549;4.4212309492904600106 0.13581537218741518425 -5.3930585383124745036 -0.53761039152815082165 -0.080803790307282200023 -0.20894633340890012008;7.9656414670912170095 0.48494180621995008895 -4.5089969647494410054 0.45784395011053163893 -0.16607025093954144723 0.044961243464046861396;-43.703518785500577337 0.2149177013081465526 88.725897820346958156 3.4658822673713611806 0.5601655906921788608 0.0041716473098698603553;44.341239361793036267 0.091680885857692212548 18.896176729990511234 7.7629796703938049873 -0.21979215746685165644 -0.02897142357255260911;55.430165593167238569 0.18010710260574816499 10.689380872657553212 7.9494451757961739347 -0.34257655827116267888 0.0075637628540219719805;-4.1223513233395872035 0.11335554500463662642 4.9869111742578251523 0.025178857972081740424 0.0077578022251372016904 0.14285007093259138866];

% Layer 2
b2 = -1.33790902519107191;
LW2_1 = [-17.427897682855192585 -27.898205914379563097 76.658072133842466656 -23.502018655728441843 17.641218461405088647 -32.328804646087021979 -28.494553879727043011 80.676520691273239549 -31.312621716367662117 18.73382136980587731 8.3435029630147621305 -44.70564407797826334 -62.222925758932873919 -14.691174211417164841 -21.853278685014469573 63.413577195231432881 -24.842910292902715241 0.14296066361396855826 -5.2812196267399684757 21.260423360701548035 14.597410928791672902 -50.363309187241881659 28.041576652975784611 -22.736742225184613631 -47.8172976388781521];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
