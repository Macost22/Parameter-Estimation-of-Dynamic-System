function [Y,Xf,Af] = NN_LM_K11(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 20-Apr-2021 23:59:22.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx6 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [6.7155162862109e-07;0.227765751497821;0;0.260905029807448;0;0.401016135895025];
x1_step1.gain = [2.00000134860859;3.78564680696321;2;4.86867054572389;2;7.6089687160829];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.2008581563559932448;-2.5592683483751503815;-3.8595188001832170244;-41.910558892047333757;-9.4431854282034048964;42.648639571328359921;-2.0148922105278566086;-2.068087645520789053;-7.8131630209817419797;8.5437804748539072364;46.718870597284698931;7.2601315378125574895;-0.19843982359206838173;7.2014535916277191419;0.64592694689853991097;52.330976044645254319;0.3792566566132508088;0.75556416822204386374;4.8726607224970823751;-0.17559816830431002055];
IW1_1 = [1.4032148927656000748 -0.11307279093230059031 1.4001519056793576556 0.46772371137730767154 0.012066901684656376401 0.005639712328137055572;-1.2208992590713223514 -0.1537948361647875628 16.709387002278326406 1.7561487912361779529 0.18999444685930513832 -0.0037662677348403450495;0.9753805478345642932 -0.1191273047552515868 3.2788821789614437385 0.55583536727698101831 0.10503587622428769977 -0.063143650170828832802;47.05259739550402287 -1.3653435093089860697 246.58851576095287328 32.561737491008834411 0.63750393061822774321 -0.0007436555663166977137;32.597790392430297857 -2.4721167591425565746 33.114254318283030898 10.039087077349030608 1.6756419348019397919 0.23657384172738377126;-119.24545911839300061 1.0763996508946924724 -177.05226070695178464 -34.457788990813668306 0.18856105106526380166 -0.015665442475866458993;3.4708128511609626088 -0.12540021602147125024 12.981818430287475508 1.9488777371915830816 0.14596404884006738967 0.0016507443924819219586;0.83736524453048988281 -0.14038356192938755695 13.482786498978242662 1.6687694926711409416 0.15302566914303336598 0.0043139006854240454988;14.284192875182291971 -1.3080462723434840289 40.555137540959883324 7.2646074229462351823 0.93928011665513500006 0.087735063645797847776;-8.9315077665597293333 0.54016743343372664032 -48.994592180945680582 -6.6981557969682699039 -0.5405892085068119135 -0.0010478501198024087887;-181.0983630058100573 0.65746675145220001557 -142.36505767779826215 -38.505428399179805865 1.0969612785742290928 -0.04463614516608317706;7.3969279661377154156 0.30395231673784878224 -58.952712614124365587 -5.4048797053249222344 -0.50922259160189153882 0.0081731811026525772595;-1.238328792137610268 -0.15934120646984425984 6.7067699735435581943 0.7013000160660040061 0.069755950090463703095 0.058456090284300606108;13.378792786143604232 0.58071522962449362293 -66.787943048500181931 -5.7008431378628641184 -0.72494927655515006837 -0.016881607099419035367;-1.3062528128126431604 0.088451502494722070158 -0.95157886759806853405 -0.37566224503147566116 -0.0097747141407749753295 -0.011131694745236276473;-160.94108673494349659 -0.6033161218177044427 -206.68270894080052358 -41.522011926619363464 1.9547490337942898808 -0.077539303710431689565;0.31779966424846417539 0.14689580779203878502 -5.504129642612591411 -0.68362789300934823089 -0.055028454065229444325 -0.037231509972606033343;4.7559856799188793275 0.051113075524453786824 -3.390275521459035879 0.15061620400511099849 0.0092396276505990714012 -0.026904713817651304542;-12.598148844776764221 -2.2693836391376254191 13.048729627452265944 3.676916876509998211 2.1434303468367699175 3.6987079943457441544;1.704513345854590689 -0.098104224060127406815 0.68332095254738034473 0.41305424869777013219 0.01276402683579446265 0.028142699338054244507];

% Layer 2
b2 = 1.713663495945270121;
LW2_1 = [-61.172938443131826602 -55.140924073823690321 -2.5633489356452350272 -52.072239499384039618 6.9083130571352153737 -122.52838977056170222 -48.079276765846060471 116.67643830478732525 -38.640770094518451572 -52.334629035000659769 84.619695451038310807 83.576958881432858561 42.524619472803792064 -56.645099623949505485 -121.0341943765970143 -15.303119854559355417 62.925084341673105826 -0.88134588007531067255 0.077444610431926172445 -43.585748551803384032];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 6.12965805719512;
y1_step1.xoffset = 0.534912025083002;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
